*ddc-filter-sorter_lsp-kind.txt*			Sort by LSP kinds.

Author:  uga-rosa <uga6603@gmail.com>
License: MIT License

CONTENTS                                 *ddc-filter-sorter_lsp-kind-contents*

Introduction			|ddc-filter-sorter_lsp-kind-introduction|
Examples			|ddc-filter-sorter_lsp-kind-examples|
Params				|ddc-filter-sorter_lsp-kind-params|


==============================================================================
INTRODUCTION                         *ddc-filter-sorter_lsp-kind-introduction*

Sort source-lsp items by kinds.


==============================================================================
EXAMPLES                                 *ddc-filter-sorter_lsp-kind-examples*
>
	call ddc#custom#patch_global(#{
	      \ sourceOptions: #{
	      \   lsp: #{
	      \     sorters: ['sorter_lsp-kind']
	      \   },
	      \ },
	      \ filterParams: #{
	      \   sorter_lsp-kind: #{
	      \     priority: [
	      \       'Enum',
	      \       ['Method', 'Function'],
	      \       'Field',
	      \       'Variable',
	      \     ]
	      \   }
	      \ },
	      \})
<

==============================================================================
PARAMS                                     *ddc-filter-sorter_lsp-kind-params*

                                   *ddc-filter-sorter_lsp-kind-param-priority*
priority		(|List|)
	The type is `(LspKind | LspKind[])[]` and LspKind is a union type.
>
	type LspKind =
	  | "Text"
	  | "Method"
	  | "Function"
	  | "Constructor"
	  | "Field"
	  | "Variable"
	  | "Class"
	  | "Interface"
	  | "Module"
	  | "Property"
	  | "Unit"
	  | "Value"
	  | "Enum"
	  | "Keyword"
	  | "Snippet"
	  | "Color"
	  | "File"
	  | "Reference"
	  | "Folder"
	  | "EnumMember"
	  | "Constant"
	  | "Struct"
	  | "Event"
	  | "Operator"
	  | "TypeParameter"
<
	The previous element has higher priority, and by making it an array,
	multiple LspKinds can have the same priority. For example, in
	|ddc-filter-sorter_lsp-kind-examples|, `Enum` has the highest
	priority, followed by `Method` and `Function` with the same priority,
	then `Field`, `Variable`, and so on.

	Default: [
	  "Snippet",
	  "Method",
	  "Function",
	  "Constructor",
	  "Field",
	  "Variable",
	  "Class",
	  "Interface",
	  "Module",
	  "Property",
	  "Unit",
	  "Value",
	  "Enum",
	  "Keyword",
	  "Color",
	  "File",
	  "Reference",
	  "Folder",
	  "EnumMember",
	  "Constant",
	  "Struct",
	  "Event",
	  "Operator",
	  "TypeParameter",
	  "Text",
	]


==============================================================================
vim:tw=78:ts=8:noet:ft=help:norl:
